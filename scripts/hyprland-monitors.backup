#!/bin/bash

# Function to show sanitized monitor description
get_sanitized_descriptions() {
  hyprctl -j monitors | jq -r '.[] | "\(.description | ascii_downcase | gsub(" "; "_"))"'
}

# Function to apply profiles based on sanitized descriptions on startup
apply_monitor_profiles_on_startup() {
  for desc in $(get_sanitized_descriptions); do
    cfg="$HOME/.config/hypr/monitors/profiles/${desc}.conf"
    [[ -f $cfg ]] && hyprctl keyword monitor $(<"$cfg")
  done
}

# Listen on the IPC v2 socket
listen_hypr_ipc() {
  socat -U - UNIX-CONNECT:"$XDG_RUNTIME_DIR/hypr/$HYPRLAND_INSTANCE_SIGNATURE/.socket2.sock" \
    | while IFS= read -r line; do
        case $line in
          monitoraddedv2\>*)
            echo listen_hypr_ipc: "$line"
            process_ipc_event "$line"
            ;;
        esac
      done
}

# Process monitoraddedv2 inputs from IPC v2 socket to find monitor description
process_ipc_event() {
  # pull & sanitize the “Description …” bit
  local desc="${1##*>>*,*,}"
  desc="${desc,,}"
  desc="${desc// /_}"
  apply_monitor_profile "$desc"
}

# Apply monitor settings from a preset file
apply_monitor_profile() {
    local desc=${1}
    # apply the matching profile, if it exists
    local cfg="$HOME/.config/hypr/monitors/profiles/${desc}.conf"
    [[ -f "$cfg" ]] && hyprctl keyword monitor "$( <"$cfg" )"
    echo apply_monitor_profile: hyprctl keyword monitor "$( <"$cfg" )"
}

# Handle lid open and close events. Enable or disable the internal display.
listen_lid_events() {
  acpi_listen \
    | grep --line-buffered -xE 'button/lid LID (open|close)' \
    | while read -r event; do
        echo listen_lid_events: "$event"
        case "$event" in

          # → Lid opened: find internal monitor description, sanitize, apply profile
          button/lid\ LID\ open)
            hyprctl -j monitors all \
              | jq -r '.[]
                        | select(.name
                            | test("^(eDP|LVDS|edp|lvds)"))
                        | .description' \
              | while IFS= read -r desc; do
                  # lowercase + spaces → underscores
                  desc="${desc,,}"
                  desc="${desc// /_}"
                  apply_monitor_profile "$desc"
                done
            ;;

          # → Lid closed: find internal monitor name, disable it
          button/lid\ LID\ close)
            hyprctl -j monitors all \
              | jq -r '.[]
                        | select(.name
                            | test("^(eDP|LVDS|edp|lvds)"))
                        | .name' \
              | while IFS= read -r name; do
                  hyprctl keyword monitor "$name,disable"
                done
            ;;
        esac
      done
}

listen_hypr_ipc &
listen_lid_events
